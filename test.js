        "content-type": "application/vnd.ms-powerpoint"
      },
      "size": 338
    }
  ]
}
object
[ { fieldName: 'myfile',
    originalFilename: '叮当管家智能门锁使用说明（商家版） (1).ppt',
    path: 'public/uploadFiles/aR9Qj1yVf7l55kp5xbK4PYiW.ppt',
    headers:
     { 'content-disposition': 'form-data; name="myfile"; filename="叮当管家智能门锁使用说明（商家版） (1).ppt"',
       'content-type': 'application/vnd.ms-powerpoint' },
    size: 338 } ]
POST /uploadImage 200 14.081 ms - 57
^Z
[13]+  Stopped                 npm start
rauldeMacBook-Pro:chatroom raul$ lsof -i tcp:3000
COMMAND    PID USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME
Google     315 raul  109u  IPv6 0x76bed419d7348369      0t0  TCP localhost:65388->localhost:hbci (ESTABLISHED)
Google     315 raul  111u  IPv6 0x76bed419e45d5169      0t0  TCP localhost:65391->localhost:hbci (ESTABLISHED)
Google     315 raul  118u  IPv6 0x76bed419e45d6a69      0t0  TCP localhost:65392->localhost:hbci (ESTABLISHED)
Google     315 raul  121u  IPv6 0x76bed419e45d8369      0t0  TCP localhost:65393->localhost:hbci (ESTABLISHED)
Google     315 raul  137u  IPv6 0x76bed419e45d7469      0t0  TCP localhost:65394->localhost:hbci (ESTABLISHED)
Google     315 raul  151u  IPv6 0x76bed419d7347469      0t0  TCP localhost:65395->localhost:hbci (ESTABLISHED)
Google     315 raul  161u  IPv6 0x76bed419da4fd869      0t0  TCP localhost:65396->localhost:hbci (ESTABLISHED)
node      2794 raul   21u  IPv6 0x76bed419e45d9269      0t0  TCP *:hbci (LISTEN)
node      2794 raul   29u  IPv6 0x76bed419e45d4769      0t0  TCP localhost:hbci->localhost:65388 (ESTABLISHED)
node      2794 raul   30u  IPv6 0x76bed419d7348d69      0t0  TCP localhost:hbci->localhost:65391 (ESTABLISHED)
node      2794 raul   31u  IPv6 0x76bed419da4fc969      0t0  TCP localhost:hbci->localhost:65392 (ESTABLISHED)
node      2794 raul   32u  IPv6 0x76bed419e45d5669      0t0  TCP localhost:hbci->localhost:65393 (ESTABLISHED)
node      2794 raul   33u  IPv6 0x76bed419da4fdd69      0t0  TCP localhost:hbci->localhost:65394 (ESTABLISHED)
node      2794 raul   34u  IPv6 0x76bed419da4fc469      0t0  TCP localhost:hbci->localhost:65395 (ESTABLISHED)
node      2794 raul   35u  IPv6 0x76bed419e45d4c69      0t0  TCP localhost:hbci->localhost:65396 (ESTABLISHED)
rauldeMacBook-Pro:chatroom raul$ kill -9 2794
rauldeMacBook-Pro:chatroom raul$ npm start

> chatroom@0.0.0 start /Users/raul/Desktop/chatroom
> node ./bin/www

GET / 304 19.419 ms - -
GET /components/bootstrap/dist/css/bootstrap.min.css 304 4.428 ms - -
GET /stylesheets/style.css 304 4.938 ms - -
GET /javascripts/socket.io.js 304 4.866 ms - -
GET /components/jquery/dist/jquery.min.js 304 4.919 ms - -
GET /components/jquery/dist/jQuery.AjaxFileUpload.js 304 4.699 ms - -
GET /components/iscroll/build/iscroll.js 304 4.494 ms - -
GET /components/bootstrap/dist/js/bootstrap.js 304 0.851 ms - -
GET /components/angular/angular.min.js 304 0.950 ms - -
GET /components/angular-route/angular-route.js 304 1.602 ms - -
GET /components/angular-ui-router/release/angular-ui-router.min.js 304 1.215 ms - -
GET /javascripts/chatroom.js 304 1.367 ms - -
GET /components/bootstrap/dist/css/bootstrap.min.css.map 304 1.242 ms - -
GET /components/jquery/dist/jquery.min.map 304 0.942 ms - -
GET /components/angular/angular.min.js.map 304 1.124 ms - -
express deprecated res.json(status, obj): Use res.status(status).json(obj) instead api/index.js:38:13
GET /api/validate 401 1.839 ms - 4
GET /pages/main.html 304 0.787 ms - -
GET /pages/home.html 304 0.537 ms - -
GET /pages/index.html 304 0.734 ms - -
GET /img/index_img.jpg 304 1.515 ms - -
GET /img/index_bg.jpg 304 1.457 ms - -
POST /api/login 200 277.932 ms - 227
GET /img/search_icon.png 304 1.076 ms - -
GET /img/pen.png 304 0.584 ms - -
GET /uploadFiles/default.png 304 1.541 ms - -
GET /img/room_icon.jpg 304 1.253 ms - -
POST /api/findRoomByName 200 7.470 ms - 1081
POST /api/getUserInfo 200 4.231 ms - 211
用户名: IncomingMessage {
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket:
   Socket {
     _connecting: false,
     _hadError: false,
     _handle:
      TCP {
        _externalStream: {},
        fd: 31,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events:
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     bytesRead: 0,
     _bytesDispatched: 2684,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _connections: 7,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _server:
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _connections: 7,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _idleTimeout: 120000,
     _idleNext:
      Socket {
        _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        bytesRead: 0,
        _bytesDispatched: 2269,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 4404,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
     _idleStart: 7568,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage:
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object],
        end: [Function: end] },
     _peername: { address: '::1', family: 'IPv6', port: 65431 } },
  connection:
   Socket {
     _connecting: false,
     _hadError: false,
     _handle:
      TCP {
        _externalStream: {},
        fd: 31,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events:
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     bytesRead: 0,
     _bytesDispatched: 2684,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _connections: 7,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _server:
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _connections: 7,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _idleTimeout: 120000,
     _idleNext:
      Socket {
        _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        bytesRead: 0,
        _bytesDispatched: 2269,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 4404,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
     _idleStart: 7568,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage:
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object],
        end: [Function: end] },
     _peername: { address: '::1', family: 'IPv6', port: 65431 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers:
   { host: 'localhost:3000',
     connection: 'keep-alive',
     'content-length': '5453',
     origin: 'http://localhost:3000',
     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.112 Safari/537.36',
     'content-type': 'multipart/form-data; boundary=----WebKitFormBoundary9lX11x2DcIBpPBx3',
     accept: '*/*',
     referer: 'http://localhost:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'zh-CN,zh;q=0.8,en;q=0.6',
     cookie: '_lxsdk=153a84d0e9fc8-077a7f73e7c0f2-123d6e5e-13c680-153a84d0ea0c8; __mta=152419846.1459666258895.1460110818154.1460357191845.15; _ga=GA1.1.435905747.1459662911; connect.sid=s%3Ai_3HM-czHa5USFpV9oXoF6ZxIEHjbfYl.w9GRRQIVWJTyEE4pE45keoaxsUEL%2FeWwhSqZ4yFBGHg' },
  rawHeaders:
   [ 'Host',
     'localhost:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '5453',
     'Origin',
     'http://localhost:3000',
     'User-Agent',
     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.112 Safari/537.36',
     'Content-Type',
     'multipart/form-data; boundary=----WebKitFormBoundary9lX11x2DcIBpPBx3',
     'Accept',
     '*/*',
     'Referer',
     'http://localhost:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'zh-CN,zh;q=0.8,en;q=0.6',
     'Cookie',
     '_lxsdk=153a84d0e9fc8-077a7f73e7c0f2-123d6e5e-13c680-153a84d0ea0c8; __mta=152419846.1459666258895.1460110818154.1460357191845.15; _ga=GA1.1.435905747.1459662911; connect.sid=s%3Ai_3HM-czHa5USFpV9oXoF6ZxIEHjbfYl.w9GRRQIVWJTyEE4pE45keoaxsUEL%2FeWwhSqZ4yFBGHg' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/uploadImage',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client:
   Socket {
     _connecting: false,
     _hadError: false,
     _handle:
      TCP {
        _externalStream: {},
        fd: 31,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events:
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     bytesRead: 0,
     _bytesDispatched: 2684,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _connections: 7,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _server:
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _connections: 7,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::3000' },
     _idleTimeout: 120000,
     _idleNext:
      Socket {
        _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        bytesRead: 0,
        _bytesDispatched: 2269,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 4404,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
     _idleStart: 7568,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage:
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object],
        end: [Function: end] },
     _peername: { address: '::1', family: 'IPv6', port: 65431 } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/uploadImage',
  _parsedUrl:
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/uploadImage',
     path: '/uploadImage',
     href: '/uploadImage',
     _raw: '/uploadImage' },
  params: {},
  query: {},
  res:
   ServerResponse {
     domain: null,
     _events: { finish: [Object], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket:
      Socket {
        _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        bytesRead: 0,
        _bytesDispatched: 2684,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 7568,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection:
      Socket {
        _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        bytesRead: 0,
        _bytesDispatched: 2684,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 7568,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Object] },
     end: [Function: end] },
  _startAt: [ 23788, 251680042 ],
  _startTime: Tue May 10 2016 22:09:07 GMT+0800 (CST),
  _remoteAddress: '::1',
  body: {},
  secret: undefined,
  cookies:
   { _lxsdk: '153a84d0e9fc8-077a7f73e7c0f2-123d6e5e-13c680-153a84d0ea0c8',
     __mta: '152419846.1459666258895.1460110818154.1460357191845.15',
     _ga: 'GA1.1.435905747.1459662911',
     'connect.sid': 's:i_3HM-czHa5USFpV9oXoF6ZxIEHjbfYl.w9GRRQIVWJTyEE4pE45keoaxsUEL/eWwhSqZ4yFBGHg' },
  signedCookies: {},
  _parsedOriginalUrl:
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/uploadImage',
     path: '/uploadImage',
     href: '/uploadImage',
     _raw: '/uploadImage' },
  sessionStore:
   MemoryStore {
     sessions: { 'i_3HM-czHa5USFpV9oXoF6ZxIEHjbfYl': '{"cookie":{"originalMaxAge":1800000,"expires":"2016-05-10T14:39:01.786Z","httpOnly":true,"path":"/"},"userId":"57137a2e57bb402b0604f0dc"}' },
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     _eventsCount: 2 },
  sessionID: 'i_3HM-czHa5USFpV9oXoF6ZxIEHjbfYl',
  session:
   Session {
     cookie:
      { path: '/',
        _expires: Tue May 10 2016 22:39:01 GMT+0800 (CST),
        originalMaxAge: 1800000,
        httpOnly: true },
     userId: '57137a2e57bb402b0604f0dc' },
  route:
   Route {
     path: '/uploadImage',
     stack: [ [Object] ],
     methods: { post: true } } }
parse files: {
  "myfile": [
    {
      "fieldName": "myfile",
      "originalFilename": "房费流水概览 (1).xls",
      "path": "public/uploadFiles/E6lSExyckbvOsFOWE_olDXmH.xls",
      "headers": {
        "content-disposition": "form-data; name=\"myfile\"; filename=\"房费流水概览 (1).xls\"",
        "content-type": "application/vnd.ms-excel"
      },
      "size": 5120
    }
  ]
}